MERLIN
by Justin Staines
from Computer Gamer, September 1986

[I've included the loading instructions as they were printed in the]
[magazine, but they were all wrong. Not only that, the different   ]
[loader printed with each of the nine hex dump listings was also   ]
[wrong! The discrepancies were:                                    ]
[+ The instructions refer to two listings - there are nine.        ]
[+ The instructions expect 8768 bytes of CODE - there are 9594.    ]
[+ The loaders expect 21 hex blocks per listing - there are 13.    ]
[+ The loaders expect 80 bytes per block - there are 82.           ]
[+ The instructions say load at 24000, the loaders start at 30000, ]
[  but the actual load address is 23296.                           ]
[Not only that, but there were characters missing from several of  ]
[the lines of hex!! The lines with a missing character were:       ]
[+ Listing 1, line 210                                             ]
[+ Listing 2, lines 100 & 110                                      ]
[+ Listing 6, lines 170 & 180                                      ]
[+ Listing 7, line 180                                             ]
[The necessary corrections have been made and noted in the program ]
[files.                                                       JimG ]
[Not only that, but ... !!!                                        ]
[The published program was intractable; jumping was a problem, thus]
[some platforms & keys were placed so that it was impossible to    ]
[get on or to them. Included are the published (impossible) version]
[and a patched (playable, although still very difficult) version.  ]
[The patched program is generated by running the "merger" program  ]
[in MERLINUT.TAP with the original code in MERLINMC.TAP. There     ]
[are some explanatory comments in "merger", plus the changes are   ]
[marked with "***" in Merlin1.ASM.                            JimG ]

[To run the patched program (Spectrum 48k only), enter:            ]
[RANDOMIZE USR 0 (don't just type NEW)                             ]
[LOAD "MERLIN" CODE 23296                                          ]
[Infinite lives: POKE 28967,0: POKE 29657,0                        ]
[Infinite time : POKE 28922,0: POKE 28939,0                        ]
[or                                                                ]
[LOAD "MERLINinfy" CODE 23296 for pre-POKEd infy lives & time      ]
[or                                                                ]
[LOAD "MERLINorig" CODE 23296 for the original version; then       ]
[RANDOMIZE USR 30950                                          JimG ]

[To jump straight to level 'n', after LOAD "MERLIN" CODE 23296:    ]
[from BASIC, type POKE 26790,n: RANDOMIZE USR 30950;               ]
[from a debugger, set a break at 68ad (26797),                     ]
[then type RANDOMIZE USR 30950, and on break set 67cc (26572) = n  ]

[  Summary of Playability Alterations:                             ]
[* Adjust platform positions to ensure that all jumps are possible.]
[* Adjust key positions to ensure that all keys are on platforms   ]
[  and are accessible.                                             ]
[* Reiterate vertical coordinate section of jump routines to       ]
[  increase the angle of ascent.                                   ]
[* Reduce the maximum jump steps from 15 to 11 to avoid overshoot. ]
[* Stability alterations to Kempston handling. (ZX-Spin still gives]
[  occasional random movements, as it will sometimes give an active]
[  input on the Kempston port even when it's been disabled.)       ]
[* Disable some redundant display sub-routine calls to speed up    ]
[  things a bit.                                                   ]


This arcade game for the Spectrum 48K, 16K [Although it fits in 16k, it won't
run on a 16k Spectrum, as it overwrites the system variables with some values
which are invalid for 16k. JimG] or + is written in pure machine code so the
gamer can fully appreciate the arcade smooth colour hi-resolution graphics
this program produces on the Spectrum, usually only found in highly expensive
cassette products.

Using every technique possible a variety of screens, a myriad of alien life
can be brought to you the reader in a program under half the size of normal
BASIC games.

Using simulated two-channel sound and a combination of colour graphics
ranging from a possible outstanding 256, this game represents extremely good
value for money.

The object of this game is by keyboard or Kempston joystick to guide Merlin
the Maniac Marauding Wizard (I couldn't think of anything rhyming with
'M') around the five dangerous caverns to collect the total of fifteen golden
keys of Druldragon II.

You will be hindered by many monsters roaming the cavern platforms, created
by the evil Hydedruldragon IV. This medieval alchemist will be constantly
regenerating his monsters from within his cauldron, crushing up the
ingredients with a thud-thud-thud, to make more creatures and tarnish
your reputation as a warlock of all warlocks.

Dare you accept this quest, an old wizard like you? Or will you just decline
your position of being the head warlock of the amalgamation of Witches and
Warlocks Corp?

It's risky, real risky, jumping from lump of suspended rock to lump of
suspended rock, retrieving key after key. "Only one more key, then back to
the teleporter, and dematerialise into 'Bandersnatch'. Hold on, I'm losing my
footing. Aaarrgghh! Look, it's a deadly disoriented flying bottle of fizzy
pop — and it's pouring all over me. Quick, got to jump away, onto that
elevator, only..."

[Ignore the rest of this section - even if it had corresponded with]
[the listings, it contains several mistakes.                  JimG ]

To enter Merlin, first type in the hex loader and run it. You will now be
prompted to enter the first set of hex data (eight bytes to each input,
sixteen characters in all), from address 26000 to 30384. When this is
completed save it on cassette with: SAVE "CODEONE" CODE 26000,4384

Now re-run the program and enter the second set of data (residing in the same
addresses) and save it with SAVE "CODETWO" CODE 24000 [sic] & pressing ENTER,
also rewinding the cassette.

When CODEONE has loaded enter: LOAD "CODETWO" CODE 28384

Now save the whole code in memory with: SAVE "MERLIN" CODE 24000,8768

A loader should be put before the code as follows:
10 BORDER 0: INK 0: PAPER 0:
   CLS: LOAD "" CODE: INK 3 :
   CLS: RAND0MIZE USR 30950
and saved with: SAVE "MERLIN" LINE 10


GAME FEATURES

Level re-designer.
[This doesn't work particularly well, but the controls are:        ]
[CAPS + V - enable editor,             V - disable editor          ]
[CAPS - left,      Z - right,          X - up/down                 ]
[C - mark/unmark                                              JimG ]

One hundred percent machine code.

Colour, hi-resolution, pixel-smooth graphics.

Nine or eight time capsules (due to teleport life loss) each having a
duration 99 time units. When you have no time capsules left the game will
restart.

Sideways elevators.

Pause feature (only present when Kempston control is used - it is basically a
secondary difficulty selector, where the game pauses whilst the joystick is
depressed in a direction which is blocked). Pump action, therefore, is
advisable for hovering or jumping left and rightwards.

Kempston compatible joystick control — this doesn't have to be selected; the
program automatically checks IN (31) for values 255 & 56 which won't be
present if an interface is connected. As these values are for issue three
machines the program sends out from port 57342,0 constantly.

Keyboard control - using various substitutes in place of recommended keys:

CAPS SHIFT - Left, CAPS SHIFT + M - Left + Up
         Z - Right,         Z + M - Right + Up

[The game can actually be played with just the bottom left half-row]
[of keys:                                                          ]
[CAPS - left, Z - right, CAPS + X - left + up, Z + X - right + up  ]
[Z + C - save game, CAPS + Z + C - load game, V - sound on/off     ]

NB. Pump action is not necessary with keyboard as pause procedure is not
called.

Maskable interrupt procedure service routine is not disabled, losing some
speed, but with an added bonus of being able to include interrupt driven
subroutines in conjunction with 'Merlin'; eg. another sprite routine,
music/tune subroutine, another joystick controller program. The new program
could be placed in, say, the printer buffer in 16K machines.

Technical notes - Merlin resides from address 24000 - 32767
[No it doesn't. JimG]

Joystick flags: Left 26569, Right 26568 - set to 1 if moving in that
direction.

-- end
